


extern "C" {

#include "microbit/modmicrobit.h"
#include "py/runtime.h"
#include "py/obj.h"
#include "py/mphal.h"
#include "microbit/modsound.h"

static const int8_t sample_T[] ={
    -8, 1, -30, -32, 24, -10, -3, 5, -22, 8, -4, -6, 4, -6, -4, -5, 
    -6, -5, -6, -8, -5, -4, -7, -9, -6, -5, -7, -3, -4, -5, -2, -7, 
    -9, -7, -5, -7, -3, -19, -16, 10, -10, -4, -3, -8, 5, -8, -6, -3, 
    -5, -10, -12, -7, -7, -3, -7, -2, -3, -2, -16, -31, 2, -2, 2, 3, 
    -5, 3, -7, -3, 1, 5, -6, -14, -11, -5, -10, -10, -10, -8, -4, -8, 
    -8, -10, -12, -13, -3, -3, 1, 3, -9, 0, -4, -2, 0, -10, -8, -5, 
    -7, -9, -12, -4, -10, -6, -6, -5, -1, -5, 0, -7, 1, -6, -5, -2, 
    -10, -2, -9, -3, -6, -4, -2, -10, -2, -11, -7, 2, -11, 0, -5, -4, 
    -1, -13, 0, -8, -5, 2, -16, 0, -10, -5, -9, -7, -5, -10, -2, -15, 
    -6, -4, -10, -9, -6, -7, -5, -4, -9, -8, -5, -10, -7, -5, -7, -9, 
    -6, -7, -6, -6, -8, -5, -7, -11, -11, -5, -4, -9, -4, -6, -7, -8, 
    -8, -7, -5, -5, -8, -5, -4, -3, -4, -5, -2, -3, -6, -7, -4, -5, 
    -6, -10, -2, -5, -10, -8, -6, -1, -2, -7, -5, -6, -3, -7, -11, -5, 
    -9, -6, -10, -8, -2, -6, -4, -10, -2, -4, -11, -5, -7, -2, -6, -9, 
    -8, -4, -6, -14, -5, -5, -6, -7, -8, 0, -2, 0, -4, -2, -1, -6, 
    -1, -6, -3, -5, -2, -1, -6, 2, -4, -4, 0, -4, -1, -5, -7, -4, 
    -2, -1, -11, -9, 0, -5, -9, -6, -2, -2, -6, -6, -9, 2, 3, -5, 
    2, 3, -4, -5, -13, -8, -3, -4, -13, -7, -1, -6, -4, -6, -5, -6, 
    -2, -6, -2, 3, -5, -5, -3, -7, -5, -7, -8, -3, -2, -6, -9, -3, 
    -2, -5, -3, 0, -1, 1, -4, -5, 0, -3, -5, -7, -3, -9, -7, -5, 
    -9, -3, 0, -4, -1, 5, 1, -1, -3, -3, -9, -6, -6, -10, -3, -10, 
    -9, -5, 0, -6, -4, 0, -2, -1, -1, -4, -6, -3, -12, -4, 1, -6, 
    -9, -2, -7, -8, -2, -8, -3, -1, -1, -4, -2, -3, -11, -1, -7, -5, 
    -4, -5, -1, -9, 0, -6, -2, -1, -7, -2, -1, -5, -6, -3, -5, -8, 
    -9, -6, -8, -6, -4, -7, -2, 0, -5, -4, -1, -4, -4, -4, -7, -5, 
    -4, -7, -8, -7, -5, -6, -6, -5, -4, -2, -6, -4, -2, -5, -1, -5, 
    -7, -5, -4, -4, -7, -3, -5, -2, -8, -13, -2, -4, -3, -3, -2, -3, 
    -4, -1, -6, -5, -4, -1, -3, -4, -4, -7, -5, -8, -6, -5, -2, -5, 
    -6, -3, -3, 2, -2, -2, -3, -1, -2, -7, -1, -5, -4, -3, -6, -1, 
    -2, -3, -4, -6, -5, -9, -4, -3, -3, -4, -8, -1, -2, -2, -3, -3, 
    0, -5, -5, -8, -2, -1, -3, -3, -2, 0, -1, -3, -6, -3, -3, -6, 
    -6, -6, -4, -3, -4, -4, -1, -2, -4, -1, -3, 2, 1, -2, -2, -5, 
    -2, -2, -1, -7, -2, -1, -5, -2, -8, -6, -5, -3, -4, -5, -1, -4, 
    -5, -6, -6, -5, -4, -4, -4, -5, -4, -1, -6, -4, -5, -6, -1, -4, 
    -7, -10, -5, -8, -8, -6, -9, -3, -3, -6, -3, -5, -4, -7, -4, -1, 
    -8, -4, -7, -4, -3, -9, -4, -4, -4, -7, -9, -4, -7, -8, -5, -10, 
    -7, -7, -8, -7, -10, 1, -2, -6, -4, -11, -8, -11, -11, -10, -15, -11, 
    -16, -11, -7, -10, -2, -4, -4, -2, -6, -3, -2, -2, -3, -5, -2, -6, 
    -5, -3, -6, -6, -7, -7, -7, -8, -8, -11, -9, -10, -10, -7, -6, -7, 
    -8, -5, -5, -7, -5, -5, -3, -4, -5, -5, -7, -5, -5, -6, -8, -7, 
    -5, -5, -7, -8, -4, -5, -7, -7, -7, -6, -6, -6, -6, -7, -7, -5, 
    -5, -6, -6, -4, -5, -8, -8, -8, -8, -7, -9, -9, -8, -9, -7, -8, 
    -8, -7, -7, -6, -7, -6, -5, -8, -8, -5, -3, -5, -5, -5, -5, -4, 
    -3, -2, -5, -5, -5, -6, -5, -6, -5, -5, -6, -6, -6, -5, -5, -5, 
    -5, -5, -7, -6, -5, -4, -4, -3, -5, -6, -5, -3, -3, -3, -4, -4, 
    -5, -5, -4, -3, -4, -4, -4, -4, -4, -4, -4, -4, -2, -3, -3, -4, 
    -3, -3, -3, -2, -1, -2, -3, -3, -3, -4, -3, -3, -4, -5, -4, -2, 
    -2, -3, -3, -4, -3, -3, -3, -4, -4, -3, -3, -4, -5, -2, -2, -4, 
    -4, -4, -4, -4, -2, -4, -5, -4, -4, -2, -2, -3, -4, -5, -4, -4, 
    -5, -5, -4, -3, -4, -4, -4, -4, -6, -8, -6, -4, -4, -5, -4, -2, 
    -3, -2, -2, -3, -2, -3, -2, -2, -2, -2, -2, -4, -4, -1, -2, -2, 
    -1, -2, -1, -1, -2, -3, -2, -2, -3, -3, -4, -3, -3, -3, -1, 0, 
    0, -1, 
};

static const int8_t sample_M[] ={
    4, -26, -48, -65, -83, -91, -81, -68, -70, -78, -78, -67, -41, -19, -7, -4, 
    -7, -13, -6, 17, 28, 20, 11, 5, 0, 4, 15, 20, 15, 7, 2, 0, 
    9, 9, 5, 5, -4, -8, -6, -4, 0, 2, 9, 15, 20, 28, 40, 52, 
    55, 55, 50, 37, 35, 35, 24, -6, -26, -41, -54, -59, -57, -59, -61, -65, 
    -63, -50, -35, -19, -15, -15, -17, -22, -13, -2, 2, 0, -8, -7, -9, -4, 
    13, 20, 18, 18, 15, 17, 26, 35, 35, 29, 24, 20, 18, 26, 33, 37, 
    37, 35, 41, 48, 57, 55, 33, 15, 18, 24, 0, -30, -46, -67, -80, -74, 
    -61, -56, -63, -72, -68, -50, -20, 4, 5, 0, -11, -15, -2, 15, 18, 11, 
    0, -11, -15, 0, 17, 22, 17, 9, 7, 7, 15, 26, 28, 26, 20, 18, 
    20, 24, 35, 42, 46, 48, 46, 57, 63, 48, 24, 15, 28, 22, -11, -37, 
    -54, -70, -80, -68, -57, -61, -74, -76, -65, -39, -11, 4, 4, -6, -19, -11, 
    11, 24, 20, 7, 0, -7, -11, 9, 28, 24, 20, 15, 9, 17, 29, 39, 
    39, 29, 22, 18, 26, 35, 41, 42, 46, 50, 53, 65, 65, 39, 20, 24, 
    28, 5, 
};

static const int8_t sample_R[] ={
    1, -2, -3, -5, -9, -9, -14, -19, -20, -20, -17, -12, -8, -5, -1, 1, 
    1, 3, 5, 6, 6, 4, 0, -2, -4, -6, -7, -7, -6, -5, -3, -1, 
    -1, 2, 4, 5, 5, 1, -5, -7, -9, -11, -9, -4, 0, 2, 2, 2, 
    2, 1, 4, 6, 7, 7, 7, 6, 7, 8, 7, 7, 7, 7, 6, 9, 
    11, 11, 14, 14, 13, 13, 11, 7, 4, 1, -2, -7, -13, -19, -23, -25, 
    -20, -12, -7, -4, -1, 4, 7, 8, 11, 12, 12, 10, 2, -4, -9, -10, 
    -9, -9, -7, -2, 2, 4, 8, 9, 10, 14, 15, 13, 11, 5, -1, -7, 
    -17, -25, -26, -18, -3, 7, 11, 14, 15, 13, 12, 12, 12, 13, 10, 5, 
    -1, 0, 5, 7, 9, 12, 15, 15, 15, 17, 20, 22, 21, 19, 12, 5, 
    -3, -14, -24, -32, -35, -29, -21, -12, -3, 4, 10, 15, 20, 21, 21, 17, 
    7, -4, -13, -20, -21, -17, -14, -10, -3, 3, 9, 15, 19, 20, 20, 16, 
    10, 3, -2, -10, -17, -24, -29, -26, -15, -2, 11, 20, 22, 22, 18, 15, 
    8, 2, -2, -10, -12, -11, -7, 2, 10, 16, 17, 20, 22, 22, 23, 22, 
    18, 13, 9, 8, 4, 2, 0, -4, -11, -24, -39, -41, -28, -9, 4, 9, 
    10, 10, 11, 11, 11, 13, 9, -5, -20, -29, -28, -20, -10, 1, 7, 10, 
    11, 10, 13, 17, 17, 9, -2, -12, -18, -19, -18, -19, -20, -16, -11, -5, 
    5, 16, 22, 20, 12, 2, -3, -6, -10, -11, -10, -7, -4, 3, 14, 22, 
    24, 20, 16, 16, 15, 12, 9, 8, 6, 4, 3, 4, 6, 7, 2, -9, 
    -24, -39, -40, -25, -3, 10, 13, 16, 16, 14, 12, 12, 11, 2, -14, -28, 
    -32, -24, -12, 1, 12, 17, 16, 14, 14, 13, 10, 5, -5, -14, -19, -18, 
    -11, -2, 0, -3, -6, -6, 0, 5, 10, 16, 14, 4, -2, -2, -2, -3, 
    -3, 0, 3, 7, 16, 23, 26, 25, 19, 13, 12, 12, 12, 12, 12, 11, 
    11, 15, 16, 12, 8, 3, -3, -21, -45, -49, -32, -9, 9, 20, 27, 24, 
    14, 8, 7, 2, -12, -24, -33, -34, -24, -8, 12, 27, 30, 24, 16, 9, 
    3, -6, -11, -16, -21, -20, -12, 2, 15, 21, 19, 4, -19, -30, -25, -14, 
    -7, 3, 9, 10, 7, 5, 7, 2, -8, -15, -13, -4, 10, 21, 27, 24, 
    18, 11, 6, 4, 2, 5, 5, 5, 10, 15, 17, 14, 9, 4, -10, -39, 
    -62, -56, -30, -1, 19, 32, 34, 21, 6, 1, -2, -12, -27, -36, -38, -32, 
    -14, 13, 36, 42, 33, 20, 2, -13, -20, -22, -22, -21, -15, -4, 10, 20, 
    26, 26, 13, -2, -15, -38, -56, -47, -19, 11, 28, 35, 32, 18, -2, -12, 
    -15, -25, -26, -16, 0, 21, 38, 44, 35, 16, -1, -8, -7, -3, 7, 12, 
    13, 16, 20, 24, 21, 14, 2, -31, -62, -69, -54, -15, 21, 47, 55, 36, 
    9, -7, -16, -25, -31, -34, -35, -31, -10, 20, 42, 51, 43, 20, -8, -30, 
    -37, -33, -24, -10, 1, 9, 18, 25, 27, 19, 7, -11, -28, -39, -43, -36, 
    -14, 9, 22, 25, 19, 9, 0, -9, -17, -21, -21, -15, -3, 12, 25, 30, 
    27, 17, 5, -3, -7, -4, 1, 7, 12, 14, 17, 15, 12, 14, 13, 10, 
    -1, -32, -63, -68, -50, -7, 35, 56, 52, 24, -7, -23, -26, -23, -19, -18, 
    -24, -20, 0, 23, 41, 45, 32, 7, -20, -37, -36, -21, -5, 10, 19, 22, 
    22, 20, 18, 10, -2, -16, -25, -25, -15, 1, 5, 8, 12, 8, 1, -2, 
    3, 3, 0, 2, 0, 0, 6, 12, 14, 13, 13, 11, 10, 10, 12, 
};

static const int8_t sample_B[] ={
    -1, -1, 2, 1, 2, 3, 1, 0, 0, -3, 5, -21, -37, -2, -6, -5, 
    -12, -54, -59, -42, -24, 17, 31, 24, 31, 40, 42, 35, 21, 11, 12, 15, 
    12, 2, -9, -16, -16, -8, -1, 2, 0, -7, -8, -2, 2, 1, -6, -13, 
    -16, -13, -12, -18, -21, -24, -25, -21, -16, -17, -20, -23, -21, -17, -12, -11, 
    -17, -18, -12, -7, -5, -8, -6, -2, 4, 9, 10, 7, 3, 4, 8, 13, 
    18, 16, 13, -1, -6, 6, 16, 22, 15, 4, 6, 14, 23, 15, -11, -42, 
    -64, -68, -61, -45, -41, -43, -41, -25, 2, 23, 34, 23, 8, 2, 1, 3, 
    -7, -32, -45, -49, -35, -37, -65, -69, -61, -33, 6, 24, 13, 11, 9, 12, 
    25, 20, 6, 6, 11, 13, 32, 31, 23, 25, 25, 36, 40, 26, 21, 10, 
    -10, -2, 34, -21, -73, -61, -66, -69, -40, -31, -54, -36, -26, 6, 52, 64, 
    36, 7, -9, -53, -34, -10, -37, -58, -65, -69, -41, 10, 21, 9, -36, -72, 
    -64, -16, 9, -7, -37, -55, -34, 0, 19, 9, -2, 0, 26, 50, 60, 50, 
    40, 21, 9, 16, 10, 4, 
};

static const int8_t sample_Ay[] ={
    -40, -35, -14, 11, 22, 23, 13, -6, -15, -19, -14, -13, -16, -18, -15, -1, 
    13, 25, 23, 11, -8, -21, -18, -8, 3, 13, 18, 13, 9, 8, 7, 3, 
    -5, -12, -20, -18, -10, -2, 2, 3, 1, -3, -4, -6, -5, -3, -1, 0, 
    3, 10, 15, 14, 13, 11, 8, 9, 12, 12, 12, 13, 16, 19, 16, 11, 
    -1, -30, -44, -35, -14, 11, 23, 26, 9, -8, -15, -19, -12, -10, -9, -14, 
    -6, 8, 21, 30, 26, 13, -8, -18, -17, -7, 7, 19, 21, 15, 11, 5, 
    2, 0, -4, -11, -18, -14, -8, -3, -1, -2, -3, -2, 1, -1, -2, -3, 
    -4, 0, 7, 14, 15, 15, 12, 10, 10, 10, 9, 8, 11, 12, 15, 16, 
    17, 12, 0, -21, -38, -33, -12, 14, 25, 28, 17, -1, -10, -15, -11, -10, 
    -6, -10, -7, 5, 18, 30, 29, 18, -4, -18, -21, -13, 2, 15, 21, 17, 
    13, 6, 3, 0, -5, -7, -15, -19, -15, -8, -1, 4, 6, 5, 4, 2, 
    -2, -4, -2, 1, 3, 10, 14, 15, 18, 18, 16, 9, 7, 10, 9, 11, 
    14, 14, 8, 5, 2, -12, -35, -40, -30, -8, 14, 25, 25, 7, -6, -19, 
    -23, -16, -11, -8, -7, 3, 10, 22, 28, 22, 7, -13, -21, -19, -8, 8, 
    21, 23, 15, 9, 0, -6, -6, -7, -10, -11, -14, -16, -13, -6, 4, 9, 
    12, 6, -3, -4, -5, -1, 4, 9, 11, 14, 19, 21, 18, 15, 11, 5, 
    5, 8, 12, 15, 14, 11, 7, 6, -16, -41, -42, -31, -3, 16, 31, 23, 
    4, -8, -22, -17, -14, -6, -8, -6, 4, 8, 21, 27, 23, 3, -12, -22, 
    -22, -9, 6, 19, 19, 15, 5, -5, -7, -7, -5, -11, -12, -10, -25, -33, 
    -15, 12, 28, 26, 16, -7, -18, -13, -5, 5, 15, 19, 15, 17, 19, 18, 
    17, 11, 3, -2, 6, 14, 14, 12, 11, -8, -41, -46, -33, -11, 10, 25, 
    25, 5, -4, -17, -22, -17, -10, -11, -16, -4, 6, 17, 24, 26, 12, -10, 
    -21, -26, -17, 0, 17, 21, 17, 11, 0, -6, -7, -8, -12, -14, -15, -22, 
    -29, -19, 1, 17, 24, 17, 1, -10, -13, -8, 0, 10, 15, 13, 16, 19, 
    18, 17, 12, 5, 3, 4, 10, 10, 9, 13, 6, -22, -45, -41, -27, -2, 
    20, 30, 22, 4, -8, -19, -17, -13, -8, -11, -11, -1, 10, 23, 28, 24, 
    5, -12, -23, -26, -14, 4, 19, 23, 20, 9, -2, -6, -7, -6, -9, -10, 
    -12, -19, -20, -14, -1, 13, 21, 18, 8, 0, -3, -2, 4, 12, 15, 16, 
    19, 20, 23, 21, 14, 9, 7, 8, 14, 19, 19, 15, 14, 4, -23, -40, 
    -37, -20, 4, 23, 36, 24, 9, -5, -16, -14, -12, -8, -10, -2, 9, 19, 
    30, 34, 26, 3, -12, -22, -21, -8, 10, 22, 22, 19, 11, 3, -3, -4, 
    -7, -13, -12, -18, -23, -17, -1, 16, 25, 26, 12, -2, -7, -5, 2, 9, 
    16, 18, 21, 23, 28, 24, 16, 10, 5, 6, 11, 17, 20, 19, 15, 12, 
    -5, -38, -44, -35, -12, 12, 34, 41, 22, 7, -10, -15, -16, -10, -7, -6, 
    8, 14, 27, 34, 34, 17, -4, -16, -22, -16, 0, 19, 25, 28, 26, 14, 
    5, -1, -3, -5, -6, -3, -12, -22, -11, 12, 29, 33, 32, 16, -1, -3, 
    2, 9, 18, 28, 26, 27, 34, 34, 27, 19, 16, 13, 15, 20, 22, 21, 
    24, 28, 12, -21, -34, -31, -14, 12, 37, 48, 32, 20, 2, -6, -7, -2, 
    -2, -8, 2, 12, 23, 35, 43, 33, 12, -4, -14, -12, -1, 17, 28, 30, 
    29, 21, 14, 10, 9, 4, -5, -6, -1, -9, -15, 0, 19, 36, 36, 31, 
    14, 0, 1, 6, 15, 25, 31, 29, 29, 35, 35, 28, 22, 20, 17, 17, 
    20, 27, 28, 27, 7, -30, -40, -25, 4, 24, 45, 47, 25, 11, 2, 2, 
    -3, -1, -5, -11, -2, 15, 36, 44, 44, 27, 1, -16, -17, -4, 9, 23, 
    27, 24, 22, 21, 20, 15, 9, -1, -12, -14, 1, 6, 0, 8, 10, 13, 
    15, 20, 21, 12, 7, 4, 6, 15, 29, 33, 31, 30, 26, 23, 19, 19, 
    19, 21, 25, 26, 26, 26, 28, 7, -32, -44, -32, -2, 21, 42, 46, 26, 
    11, -1, 2, -4, -6, -11, -14, -3, 15, 38, 47, 45, 23, -3, -19, -18, 
    -5, 6, 18, 21, 21, 20, 24, 26, 18, 8, -5, -15, -14, 4, 16, 12, 
    11, 10, 9, 8, 16, 17, 12, 10, 9, 13, 16, 25, 26, 23, 23, 25, 
    26, 22, 19, 14, 14, 20, 26, 25, 24, 30, 28, 24, 0, -38, -45, -29, 
    10, 35, 49, 45, 19, 11, 4, 12, 3, -3, -12, -19, -3, 16, 46, 50, 
    39, 12, -5, -9, -6, 9, 13, 14, 13, 19, 26, 31, 31, 18, 2, -11, 
    -7, 2, 13, 23, 16, -12, -17, 8, 30, 33, 22, 11, 1, 9, 24, 28, 
    21, 12, 13, 23, 32, 36, 31, 17, 4, 6, 19, 34, 36, 28, 24, 22, 
    18, -9, -35, -31, -12, 15, 24, 35, 29, 17, 18, 17, 17, -4, -17, -25, 
    -15, 7, 29, 42, 32, 20, 6, 4, 2, 2, -1, -6, -3, 9, 29, 31, 
    27, 19, 7, 0, -3, 3, 6, 5, 2, 12, 13, -6, -10, 4, 21, 21, 
    19, 19, 13, 17, 21, 23, 17, 17, 23, 27, 28, 23, 18, 14, 17, 22, 
    28, 31, 25, 18, 20, 23, 24, -4, -41, -36, -11, 24, 35, 35, 25, 13, 
    22, 24, 24, -4, -24, -26, -6, 19, 33, 39, 22, 16, 14, 20, 18, 5, 
    -8, -13, 2, 21, 37, 34, 23, 15, 15, 21, 19, 7, -8, -7, 1, 21, 
    32, 3, -20, -6, 27, 41, 27, 11, 5, 17, 28, 33, 21, 8, 9, 24, 
    38, 33, 21, 14, 18, 24, 29, 26, 17, 14, 21, 38, 37, 23, 5, -25, 
    -34, -10, 19, 28, 12, 9, 19, 40, 44, 26, 3, -20, -19, -3, 22, 22, 
    15, 18, 30, 43, 40, 24, 0, -8, -4, 13, 23, 20, 17, 22, 36, 41, 
    31, 12, -2, -6, 4, 14, 15, 14, -6, -13, 15, 42, 37, 13, 7, 15, 
    33, 33, 16, -2, 3, 23, 35, 41, 26, 13, 15, 28, 23, 8, 5, 9, 
    23, 27, 27, 23, 17, 13, 13, 16, -12, -40, -23, 6, 23, 15, 13, 14, 
    21, 33, 18, 5, -10, -9, -5, 9, 12, 3, 14, 28, 40, 29, 17, 2, 
    2, 6, 8, 7, 3, 10, 21, 35, 33, 22, 9, 7, 9, 3, -5, -5, 
    2, -11, -7, 19, 34, 24, 14, 21, 23, 25, 13, 0, -3, 16, 29, 26, 
    24, 19, 20, 22, 27, 16, 3, 6, 14, 15, 13, 14, 16, 19, 19, 14, 
    11, 4, -26, -30, -6, 7, 5, 0, 16, 23, 36, 29, 6, -6, -6, 3, 
    -4, 0, -1, 10, 25, 39, 34, 18, 16, 12, 13, 5, 2, 2, 9, 21, 
    23, 20, 15, 18, 17, 16, 9, 7, 7, 6, -3, -16, 3, 27, 32, 20, 
    18, 23, 28, 26, 14, 3, 5, 15, 19, 23, 24, 23, 28, 33, 22, 11, 
    7, 11, 16, 15, 15, 18, 26, 27, 20, 13, 12, 11, 11, -12, -30, -3, 
    11, 12, 1, 11, 21, 24, 33, 12, 3, 3, 16, 8, 3, 4, 2, 16, 
    23, 25, 14, 20, 24, 23, 17, 10, 6, 5, 10, 6, 4, 8, 21, 24, 
    21, 19, 14, 7, 6, 6, -21, -13, 17, 20, 4, 10, 27, 25, 28, 24, 
    11, 5, 16, 17, 13, 17, 14, 12, 21, 26, 13, 11, 19, 21, 15, 13, 
    10, 8, 15, 15, 6, 5, 17, 18, 20, 19, -20, -13, 11, 5, -13, -12, 
    22, 14, 28, 25, 14, 18, 21, 14, -9, 5, -2, 1, 9, 20, 13, 9, 
    24, 20, 19, 11, 10, 2, 7, 7, -4, -1, 7, 13, 9, 12, 11, 15, 
    15, 9, -11, -20, 1, 4, -8, -5, 17, 22, 19, 23, 20, 18, 15, 9, 
    2, 8, 6, 0, 10, 20, 12, 9, 16, 13, 9, 11, 5, 4, 11, 9, 
    4, 8, 15, 8, 7, 10, 16, -5, -30, 1, 1, -7, -16, -3, 13, 5, 
    20, 5, 15, 17, 13, -1, 4, 11, -10, -4, 0, 11, 4, 9, 9, 11, 
    16, 8, 5, 2, 9, -3, -7, -4, 2, 6, 5, 7, 1, 4, 4, -1, 
    1, 6, 4, 4, 11, 10, 10, 10, 11, 10, 11, 13, 9, 10, 15, 14, 
    9, 9, 9, 9, 10, 8, 6, 7, 8, 6, 10, 10, 5, 2, 7, 6, 
    4, 5, 6, 10, 10, 15, 14, -9, -9, 6, -4, -24, -20, 10, 11, 7, 
    12, 24, 26, 16, 7, 6, 9, -6, -16, -8, 2, -3, -4, 6, 16, 18, 
    12, 9, 10, 12, 0, -7, -2, 2, 
};

static const int8_t sample_I[] ={
    8, 21, 43, 55, 60, 54, 49, 54, 47, 21, 20, 15, -1, -4, -1, -1, 
    -6, -5, -5, -14, -15, -6, -17, -19, -9, -6, -4, 2, 4, 5, 17, 12, 
    7, 12, 11, 2, -4, -3, -8, -8, -8, -10, -6, -1, -3, -3, 9, 7, 
    -4, -1, 2, -28, -33, -13, -40, -47, -15, -6, -8, 11, 27, 34, 51, 49, 
    47, 60, 48, 19, 25, 31, 5, -15, -7, 2, -4, -6, -6, 2, 6, -17, 
    -27, -4, -5, -33, -24, -8, -11, -13, -7, 1, 12, 17, 6, 11, 23, 11, 
    -6, 1, 3, -14, -18, -14, -14, -14, -14, -14, -3, 5, -3, -2, -2, -22, 
    -21, -19, -40, -34, -17, -15, -8, 12, 24, 34, 45, 43, 46, 53, 37, 16, 
    21, 21, -5, -22, -5, -5, -17, -11, 0, 4, 3, -7, -22, -5, 0, -31, 
    -30, -12, -11, -23, -16, -1, 9, 9, 3, 12, 21, 7, -8, -1, -1, -14, 
    -24, -23, -14, -15, -21, -17, -4, 0, -3, 0, -2, -7, -11, -26, -38, -30, 
    -27, -32, -20, -1, 8, 19, 31, 38, 44, 41, 38, 33, 18, 8, 11, -1, 
    -17, -14, -2, -3, -9, 2, 16, -13, -39, 3, 1, -41, -36, -9, -12, -23, 
    -18, -6, 17, 10, -2, 16, 26, 4, -11, -2, -3, -20, -32, -27, -18, -22, 
    -29, -15, 3, 1, -5, 6, 20, 0, -20, -4, -8, -38, -49, -29, -21, -28, 
    -19, 10, 31, 30, 37, 51, 52, 38, 29, 22, 15, 2, -15, -13, -12, -20, 
    -13, 0, 1, 2, -14, -19, 10, -4, -34, -18, -4, -12, -19, -9, 3, 9, 
    5, 3, 16, 15, -6, -10, 2, -6, -21, -22, -16, -13, -16, -16, -5, 5, 
    2, -3, 11, 16, 4, -5, -14, -13, -18, -24, -49, -40, -7, -24, -23, 12, 
    29, 22, 35, 44, 43, 41, 28, 21, 17, 4, 0, -4, -13, 4, 4, -11, 
    -25, -29, -4, -17, -40, -22, -2, -7, -13, 0, 17, 21, 6, 6, 19, 11, 
    -13, -17, -5, -13, -31, -28, -13, -9, -16, -14, 5, 12, 4, 6, 17, 14, 
    1, -7, -4, -6, -40, -34, -14, -34, -39, -31, -14, -5, -6, 6, 31, 35, 
    26, 35, 44, 34, 18, 19, 22, 12, 0, 1, 7, 5, -48, -45, 15, -28, 
    -61, -24, 6, -13, -15, 5, 35, 40, 9, 14, 41, 25, -18, -11, 5, -15, 
    -37, -32, -13, -8, -20, -16, 17, 25, 5, 11, 31, 23, 0, -5, 3, -5, 
    -24, -31, -10, -16, -53, -17, 5, -16, -9, 11, 10, 5, 9, 8, 21, 13, 
    -1, 11, 22, 1, -5, 21, 17, 10, 18, 36, 15, -51, 4, 11, -52, -54, 
    -24, -16, -33, -26, -11, 33, 21, 2, 29, 50, 15, -6, 7, 2, -16, -38, 
    -31, -18, -21, -38, -18, 11, 6, -2, 19, 32, 20, 10, 11, 10, -1, -17, 
    -19, -10, -19, -29, -20, 3, -25, -35, 20, 10, -16, 4, 22, 10, 2, -2, 
    8, 19, -5, -11, 15, 13, -14, 0, 23, 22, 12, 27, 22, -26, 5, 1, 
    -38, -37, -24, -26, -28, -23, -19, 14, 12, 6, 24, 38, 19, 9, 13, 5, 
    -7, -20, -24, -21, -25, -37, -24, -6, -6, -5, 13, 23, 21, 19, 17, 20, 
    11, -5, -10, -6, -15, -24, -21, -11, -11, -10, 0, 9, 17, 13, 16, 15, 
    -19, -3, 12, -21, -28, -7, -5, -16, -13, -5, 16, 15, 0, 17, 38, 21, 
    11, 29, 29, 20, 16, -25, -18, 9, -35, -53, -21, -9, -29, -17, -1, 17, 
    22, 9, 17, 39, 24, -3, 7, 8, -7, -22, -22, -15, -12, -20, -13, 10, 
    15, 7, 17, 33, 26, 14, 14, 14, 6, -5, -12, -7, -8, -15, -13, 1, 
    5, 5, 10, 18, 25, 22, 17, 15, 14, 7, -1, -3, -3, -8, -10, -6, 
    -4, 0, 5, 9, 16, 18, 17, 21, 23, 18, 13, 10, 6, 2, -1, -2, 
    -2, -3, -1, 3, 6, 11, 13, 16, 18, 19, 16, 12, 10, 8, 4, 0, 
    -3, -1, -11, -24, 5, 8, -11, 3, 22, 20, 18, 22, 26, 34, 25, 17, 
    22, 13, 2, 0, -5, -10, -13, -14, -10, -5, -2, 2, 11, 17, 19, 19, 
    23, 22, 15, 10, 8, 5, 0, -5, -6, -2, -1, 0, 5, 11, 15, 14, 
    17, 22, 19, 18, 16, 13, 10, 7, 4, 4, 4, 1, 1, 6, 9, 8, 
    10, 13, 15, 14, 14, 13, 11, 10, 6, 6, 5, 2, 1, 2, 5, 8, 
    8, 10, 14, 15, 13, 13, 12, 13, 13, 9, 11, 10, 4, 3, 6, 4, 
    2, 2, 4, 7, 7, 9, 10, 9, 9, 10, 11, 11, 10, 7, 6, 7, 
    8, 4, 4, 6, 4, 3, 4, 5, 5, 6, 6, 7, 8, 7, 6, 9, 
    11, 9, 8, 9, 7, 3, 3, 2, 2, 2, 1, 2, 4, 4, 4, 4, 
    4, 4, 4, 4, 6, 7, 5, 4, 6, 5, 5, 4, 4, 5, 4, 6, 
    6, 5, 6, 9, 9, 7, 7, 6, 7, 6, 4, 5, 5, 4, 2, 3, 
    5, 3, 3, 4, 4, 5, 8, 6, 6, 6, 4, 5, 5, 2, 2, 1, 
    0, -1, 0, 1, 1, 2, 1, 0, 2, 3, 0, 2, 3, 2, 4, 6, 
    4, 4, 4, 5, 6, 5, 1, 1, 2, 0, 1, 0, 0, 0, 1, 1, 
    0, 1, 0, 0, 0, 2, 3, 3, 3, 1, 3, 4, 3, 4, 6, 4, 
    3, 5, 5, 5, 4, 5, 5, 6, 7, 7, 5, 4, 5, 4, 4, 5, 
};

static const int8_t sample_Oh[] ={
    -2, -2, -1, -1, -2, -2, -3, -1, 0, -1, -2, -2, -1, -2, -3, -2, 
    -3, -2, -2, -2, -1, -2, -2, 0, -3, -4, -3, -3, -3, -3, -6, -6, 
    -9, -42, -70, -58, 2, 57, 62, 57, 30, 12, 18, 20, 15, -9, -16, -5, 
    18, 36, 40, 30, 6, -21, -49, -55, -39, -18, -14, -10, 4, 22, 39, 43, 
    30, -1, -28, -39, -34, -29, -25, -18, -12, 5, 33, 52, 44, 24, -1, -19, 
    -21, -20, -20, -23, -37, -41, -10, 25, 45, 35, 17, -1, -15, -12, -15, -29, 
    -47, -45, -16, 18, 40, 47, 44, 36, 34, 28, 14, 4, 6, 18, 30, 39, 
    23, -40, -67, -67, -30, 17, 8, 6, -14, -2, 38, 63, 54, -4, -42, -58, 
    -43, -20, -3, -10, -28, -9, 27, 58, 54, 32, -6, -34, -29, -12, -5, -26, 
    -33, -24, 3, 32, 52, 27, -33, -47, -28, 7, 8, -9, -22, -31, -8, 11, 
    17, -7, -12, 4, 18, 30, 31, 29, 13, 11, 19, 19, 25, 28, 35, 41, 
    39, 14, -49, -67, -67, -41, -1, 2, 12, -2, 19, 57, 67, 54, -4, -49, 
    -63, -52, -34, -15, -24, -37, -12, 32, 63, 62, 43, 1, -28, -33, -22, -21, 
    -43, -50, -43, -3, 21, 15, 8, 0, 9, 2, 1, -11, -29, -35, -30, -8, 
    2, 11, 15, 22, 32, 45, 49, 31, 11, -7, -4, 2, 10, 29, 44, 42, 
    29, -13, -61, -68, -65, -25, -10, -13, -5, -7, 33, 60, 66, 39, -12, -46, 
    -55, -41, -34, -23, -36, -35, -3, 38, 62, 51, 32, -1, -17, -18, -18, -29, 
    -49, -51, -26, -8, -18, 1, 14, 20, 15, 12, 6, -15, -22, -32, -24, -22, 
    -6, 14, 20, 36, 49, 57, 46, 26, 4, -3, 0, 8, 15, 16, 28, 32, 
    37, -6, -61, -67, -64, -32, -8, -3, -5, -5, 21, 49, 65, 43, -2, -40, 
    -55, -48, -37, -23, -35, -37, -11, 28, 57, 57, 38, 5, -19, -24, -19, -29, 
    -45, -44, -58, -55, -17, 28, 45, 28, 22, 4, -9, -17, -20, -31, -45, -17, 
    11, 37, 48, 52, 44, 34, 35, 27, 14, -4, 1, 15, 26, 30, 31, -12, 
    -64, -66, -65, -21, 2, 0, -2, -15, 21, 55, 66, 38, -16, -54, -63, -46, 
    -27, -12, -36, -46, -10, 38, 63, 59, 39, -9, -32, -25, -11, -20, -49, -51, 
    -46, -54, -28, 15, 36, 31, 20, 14, -6, -15, -18, -25, -40, -30, 2, 24, 
    44, 56, 58, 45, 37, 36, 26, 12, 6, 9, 17, 27, 35, 46, -3, -64, 
    -65, -67, -34, 1, 8, 0, -12, 22, 58, 66, 52, -3, -54, -64, -56, -30, 
    -7, -26, -40, -20, 29, 62, 64, 52, 3, -29, -27, -14, -17, -40, -49, -61, 
    -65, -25, 33, 57, 41, 23, 6, -8, -7, -14, -36, -55, -35, 3, 37, 59, 
    53, 32, 31, 49, 53, 30, 7, -2, -4, 6, 26, 40, 27, 35, 18, -52, 
    -70, -64, 0, 52, 9, -2, -18, -19, 39, 67, 55, -22, -72, -65, -52, -16, 
    19, 4, -53, -36, 30, 62, 59, 44, -2, -54, -49, -11, 1, -35, -52, -44, 
    -62, -40, 24, 58, 33, 7, 1, -8, -10, -7, -17, -44, -33, 12, 42, 50, 
    50, 47, 34, 37, 48, 55, 24, -24, -34, -10, 24, 42, 7, -25, 14, 23, 
    -18, -53, -48, -31, -34, -15, 1, -2, -12, 11, 40, 34, 20, 7, -7, -33, 
    -33, -19, -22, -30, -20, 4, 14, 28, 39, 29, 8, -5, -2, -12, -16, -23, 
    -55, -70, -47, 9, 34, 33, 34, 18, 7, 4, 2, -24, -37, -18, 11, 40, 
    58, 60, 42, 34, 50, 65, 49, -2, -39, -39, -3, 41, 56, 43, -1, -38, 
    -11, 11, -2, -42, -65, -58, -26, 20, 36, 38, 19, 10, 26, 40, 30, -9, 
    -44, -64, -53, -19, 13, 23, 14, 15, 24, 41, 44, 29, -2, -35, -40, -26, 
    -28, -53, -58, -38, 0, 32, 50, 43, 22, 11, 10, 7, -4, -10, -13, 0, 
    17, 25, 36, 44, 48, 45, 36, 33, 31, 20, 4, 6, 23, 38, 35, 28, 
    32, 0, -52, -66, -58, -34, -11, -1, 2, 2, 20, 50, 65, 55, 21, -12, 
    -37, -46, -37, -29, -32, -27, -6, 20, 43, 57, 55, 36, 15, 1, -7, -17, 
    -33, -42, -36, -42, -55, -38, -5, 29, 42, 38, 33, 24, 15, 6, -6, -18, 
    -13, 6, 29, 41, 39, 36, 33, 40, 55, 54, 33, 12, 4, 14, 23, 24, 
    21, 18, 25, 19, -27, -62, -63, -53, -21, 3, 11, 4, 6, 37, 61, 63, 
    38, 4, -26, -39, -35, -29, -30, -30, -15, 7, 36, 54, 56, 44, 25, 12, 
    -2, -13, -26, -37, -39, -47, -59, -42, -5, 30, 47, 44, 36, 26, 19, 15, 
    4, -9, -15, -6, 15, 35, 44, 41, 38, 36, 44, 53, 36, 13, 2, 11, 
    23, 20, 15, 12, 26, 25, -24, -59, -60, -39, -14, 3, 10, 4, 7, 28, 
    50, 50, 34, 9, -18, -32, -34, -25, -23, -24, -14, 6, 24, 40, 46, 32, 
    14, 5, 1, -8, -20, -30, -34, -28, -33, -47, -38, -8, 22, 38, 39, 31, 
    23, 19, 16, 10, -2, -4, 9, 20, 26, 31, 28, 27, 37, 49, 45, 31, 
    22, 20, 20, 23, 18, 14, 22, 1, -49, -65, -58, -33, -6, 5, 9, 4, 
    13, 37, 56, 49, 21, -6, -30, -37, -30, -25, -34, -40, -15, 21, 43, 51, 
    43, 23, 9, 4, 0, -13, -33, -43, -41, -29, -4, -9, -42, -41, -8, 29, 
    43, 38, 23, 4, 7, 19, 17, 1, -4, 4, 21, 35, 38, 33, 27, 36, 
    42, 36, 23, 20, 26, 30, 25, 16, 24, 11, -40, -64, -61, -61, -31, 6, 
    27, 29, 18, 28, 44, 52, 41, 16, -20, -53, -55, -41, -31, -25, -15, -2, 
    18, 42, 53, 46, 30, 16, -1, -13, -24, -34, -42, -43, -28, -8, -1, -15, 
    -29, -19, 9, 36, 38, 19, 3, 1, 4, 7, 4, -3, -1, 13, 30, 35, 
    31, 29, 29, 28, 29, 30, 17, 15, 19, 14, 16, 20, 6, -21, -50, -54, 
    -38, -24, -10, -8, -7, -4, 13, 31, 37, 30, 12, -3, -19, -22, -23, -27, 
    -33, -34, -20, -3, 15, 25, 26, 22, 20, 18, 11, 1, -15, -27, -33, -23, 
    -11, -2, -5, -29, -49, -40, -5, 26, 31, 19, 9, 9, 21, 27, 17, 1, 
    -4, 6, 19, 24, 22, 14, 10, 26, 39, 38, 37, 29, 17, 19, 27, 36, 
    17, -45, -67, -61, -39, -10, -2, -9, -21, -7, 23, 50, 50, 29, -2, -22, 
    -24, -20, -16, -32, -48, -47, -26, 2, 23, 30, 23, 18, 17, 24, 18, 1, 
    -21, -35, -32, -21, -8, -9, -20, -34, -43, -32, -4, 16, 19, 13, 6, 12, 
    19, 18, 8, -7, -8, 4, 16, 20, 15, 9, 12, 24, 38, 32, 21, 17, 
    12, 13, 19, 24, 21, 3, -37, -66, -61, -33, -7, -13, -23, -25, -12, 19, 
    45, 51, 27, 2, -8, -11, -13, -20, -34, -51, -50, -30, 1, 17, 20, 17, 
    14, 21, 28, 23, 4, -15, -26, -27, -23, -19, -18, -35, -47, -38, -14, 8, 
    16, 15, 13, 16, 24, 29, 18, 1, -14, -10, 5, 14, 20, 17, 16, 19, 
    30, 42, 40, 31, 19, 17, 20, 20, 20, 16, 6, -25, -56, -55, -34, -17, 
    -17, -18, -18, -11, 14, 40, 45, 29, 14, 3, -2, -7, -18, -33, -47, -45, 
    -28, -7, 6, 16, 18, 19, 28, 35, 30, 14, -2, -16, -21, -18, -17, -21, 
    -25, -35, -38, -27, -5, 7, 8, 12, 17, 20, 21, 19, 9, -4, -6, 1, 
    8, 10, 9, 10, 13, 17, 25, 29, 30, 24, 16, 19, 26, 25, 17, 10, 
    5, -5, -29, -49, -51, -43, -32, -24, -16, -14, -5, 12, 28, 34, 27, 16, 
    0, -10, -17, -25, -33, -40, -37, -29, -15, -2, 9, 17, 21, 25, 28, 25, 
    15, 5, -8, -17, -20, -20, -23, -25, -33, -39, -31, -11, 5, 5, 7, 12, 
    20, 25, 23, 16, 4, -2, 0, 4, 4, 6, 7, 7, 12, 23, 30, 28, 
    23, 20, 24, 29, 24, 16, 10, 5, 0, -20, -46, -54, -48, -35, -24, -17, 
    -12, -3, 13, 29, 40, 33, 19, 6, -5, -12, -17, -28, -38, -40, -33, -18, 
    -4, 8, 15, 21, 27, 34, 34, 28, 17, 2, -10, -16, -20, -22, -23, -27, 
    -35, -31, -16, 1, 9, 9, 8, 12, 20, 23, 20, 8, -6, -9, -3, 4, 
    5, 6, 11, 16, 20, 24, 27, 26, 24, 20, 19, 17, 14, 9, 4, 1, 
    -11, -28, -45, -46, -38, -26, -20, -15, -9, -1, 14, 26, 30, 21, 13, 5, 
    -3, -10, -19, -27, -34, -32, -24, -11, 0, 7, 13, 19, 24, 29, 29, 20, 
    11, 1, -9, -14, -21, -24, -25, -23, -22, -24, -19, -8, 4, 10, 9, 3, 
    2, 7, 9, 7, 2, -5, -7, 0, 5, 10, 15, 17, 18, 18, 22, 22, 
    20, 14, 10, 10, 9, 8, 2, -3, -4, -9, -26, -39, -39, -31, -23, -17, 
    -13, -12, -5, 5, 15, 20, 15, 7, 3, 0, -6, -12, -18, -25, -27, -22, 
    -13, -7, -2, 1, 5, 10, 17, 19, 14, 6, 1, -2, -7, -13, -19, -22, 
    -23, -22, -21, -22, -20, -10, 4, 9, 8, 3, -1, 3, 9, 5, -3, -8, 
    -5, 0, 6, 11, 14, 16, 18, 22, 21, 17, 13, 9, 3, 0, 4, 4, 
    1, -2, -2, -2, -11, -25, -34, -32, -24, -16, -14, -14, -13, -7, 4, 14, 
    17, 13, 9, 6, 5, 1, -1, -8, -16, -18, -14, -8, -4, 0, 3, 6, 
    10, 14, 18, 18, 12, 5, 0, -3, -6, -9, -12, -18, -23, -23, -20, -15, 
    -4, 4, 9, 9, 8, 7, 6, 6, 5, 2, -2, -4, 3, 7, 8, 12, 
    13, 13, 15, 17, 17, 13, 9, 8, 9, 7, 4, 1, 0, -1, 0, 4, 
    -2, -14, -25, -26, -21, -15, -13, -15, -13, -11, -3, 9, 14, 15, 13, 10, 
    7, 7, 4, 1, -5, -12, -11, -9, -7, -5, -2, 2, 3, 8, 13, 13, 
    10, 5, 2, 1, -2, -5, -10, -17, -22, -23, -19, -12, -7, -4, -1, -2, 
    0, 5, 8, 11, 9, 4, 4, 6, 6, 3, 4, 5, 7, 11, 12, 14, 
    12, 8, 6, 8, 11, 13, 6, 0, -1, -1, 4, 6, 3, -3, -18, -29, 
    -27, -21, -15, -15, -18, -19, -14, -3, 8, 15, 12, 9, 9, 10, 10, 7, 
    -1, -11, -17, -17, -13, -9, -7, -8, -7, -2, 3, 8, 11, 8, 5, 4, 
    0, -1, -1, -8, -19, -24, -25, -19, -10, -6, -9, -9, -6, -1, 8, 13, 
    12, 7, 4, 6, 8, 10, 9, 3, -1, 0, 5, 8, 5, 1, 0, 5, 
    8, 11, 12, 7, 3, 4, 7, 8, 8, 3, -1, -5, -15, -22, -26, -22, 
    -18, -18, -15, -11, -6, 1, 9, 12, 13, 12, 11, 9, 7, 4, -1, -7, 
    -13, -14, -15, -13, -12, -11, -7, -1, 2, 7, 11, 10, 9, 9, 6, 4, 
    -1, -9, -14, -20, -21, -16, -12, -11, -11, -7, 0, 6, 11, 16, 17, 15, 
    14, 13, 12, 10, 10, 8, 5, 6, 8, 9, 8, 6, 5, 8, 11, 13, 
    12, 8, 6, 5, 6, 5, 5, 3, -1, -1, -2, -10, -17, -19, -17, -14, 
    -11, -9, -8, -7, -5, 1, 9, 13, 13, 11, 7, 4, 4, 2, -1, -7, 
    -11, -13, -13, -11, -7, -4, -3, 0, 3, 5, 9, 11, 10, 7, 1, -6, 
    -9, -11, -11, -11, -11, -11, -12, -12, -10, -4, 5, 9, 11, 12, 12, 11, 
    11, 13, 12, 9, 7, 4, 2, 2, 0, 2, 3, 4, 6, 8, 6, 3, 
    4, 5, 8, 5, 1, 0, -3, -1, -2, -10, -18, -23, -20, -14, -13, -9, 
    -7, -10, -7, 1, 7, 10, 11, 11, 8, 2, 1, 2, 0, -3, -7, -9, 
    -13, -10, -7, -4, -1, -2, -1, 1, 5, 9, 11, 11, 5, 1, -2, -6, 
    -7, -9, -11, -10, -8, -8, -8, -5, -1, 2, 8, 11, 10, 11, 11, 12, 
    14, 14, 13, 12, 10, 6, 6, 7, 6, 6, 9, 8, 2, 3, 6, 7, 
    9, 9, 8, 6, 6, 6, 5, 8, 3, -6, -14, -18, -15, -10, -6, -6, 
    -8, -8, -6, 0, 8, 14, 14, 10, 6, 4, 5, 7, 6, -1, -6, -8, 
    -10, -10, -5, -4, -2, -1, -1, 4, 7, 10, 13, 11, 8, 4, 0, -4, 
    -5, -7, -7, -7, -9, -9, -9, -8, -6, -2, 4, 7, 9, 11, 11, 11, 
    11, 11, 13, 13, 10, 8, 6, 6, 6, 5, 6, 5, 5, 6, 6, 7, 
    9, 10, 8, 4, 5, 5, 6, 6, 3, 3, 7, 7, 3, -4, -9, -10, 
    -10, -7, -5, -6, -6, -6, -4, -1, 4, 9, 10, 9, 7, 5, 6, 5, 
    3, 2, -1, -5, -8, -8, -7, -3, 1, 1, 1, 3, 6, 7, 8, 6, 
    2, -1, -3, -5, -3, -3, -5, -7, -10, -8, -2, 6, 13, 13, 11, 10, 
    11, 14, 15, 17, 17, 12, 8, 8, 9, 8, 9, 9, 7, 5, 6, 5, 
    6, 10, 11, 9, 7, 8, 9, 8, 9, 9, 8, 9, 9, 7, 1, -6, 
    -8, -9, -7, -6, -5, -4, -4, -3, 0, 6, 10, 12, 14, 13, 10, 9, 
    9, 7, 6, 4, 2, 0, -2, -3, 1, 4, 5, 5, 6, 8, 9, 9, 
    6, 2, -2, -5, -4, -3, -3, -1, 0, -2, 1, 4, 5, 11, 14, 14, 
    13, 11, 12, 13, 12, 13, 14, 12, 10, 7, 5, 6, 8, 10, 9, 7, 
    7, 7, 6, 7, 8, 7, 6, 6, 7, 9, 10, 9, 11, 9, 5, -2, 
    -6, -5, -5, -7, -5, -2, -3, -4, -3, 1, 7, 10, 13, 13, 12, 10, 
    9, 12, 12, 10, 6, 4, 2, -2, -1, 1, 2, 4, 4, 4, 6, 6, 
    5, 5, 1, 2, 2, 1, 2, 1, 1, 1, 2, 5, 8, 9, 10, 12, 
    13, 13, 12, 13, 17, 17, 14, 12, 10, 7, 5, 6, 5, 3, 6, 5, 
    5, 6, 7, 6, 8, 9, 10, 10, 10, 9, 9, 10, 8, 6, 4, 2, 
    -2, -4, -3, -1, -2, -4, -3, -1, 1, 2, 6, 9, 11, 10, 9, 10, 
    11, 10, 8, 8, 4, 2, 3, 1, 1, 3, 1, 1, 3, 4, 4, 5, 
    6, 7, 4, 0, -1, 0, 1, 1, 2, 1, 1, 1, 2, 5, 7, 9, 
    12, 12, 13, 15, 16, 15, 16, 15, 11, 9, 6, 4, 5, 8, 8, 7, 
    4, 4, 7, 7, 7, 8, 7, 6, 6, 8, 6, 5, 7, 7, 6, 5, 
    2, 0, -2, -5, -6, -6, -7, -7, -7, -7, -5, -2, 1, 4, 7, 7, 
    8, 8, 7, 6, 5, 3, 3, 1, -1, -2, -3, -3, -2, -2, -2, -1, 
    -1, 0, -1, -4, -4, -4, -5, -2, -2, -3, -4, -3, -2, -2, 0, 1, 
    5, 7, 5, 6, 6, 6, 6, 6, 6, 6, 4, 3, 2, 0, 1, 0, 
    -1, 1, 2, 1, 3, 4, 2, 3, 3, 5, 7, 4, 4, 4, 1, -1, 
    -5, -9, -10, -11, -11, -11, -11, -11, -11, -8, -7, -5, 1, 3, 4, 3, 
    1, 3, 4, 1, -1, -1, -2, -6, -8, -6, -5, -5, -4, -4, -3, -2, 
    -3, -2, -1, -1, -2, -4, -4, -2, -4, -5, -4, -4, -4, -3, -3, -2, 
    1, 2, 3, 3, 3, 5, 5, 5, 6, 6, 3, 1, -1, 0, -1, -1, 
    0, -2, -1, -1, -2, -2, 0, 2, 2, 2, 2, -1, 0, 0, -2, -1, 
    -3, -5, -5, -7, -9, -8, -9, -8, -8, -7, -8, -7, -3, -3, -2, 1, 
    1, 2, 1, 1, 0, 0, 1, -2, -2, -4, -4, -4, -5, -3, -4, -3, 
    -3, -6, -5, -4, -5, -5, -5, -5, -6, -6, -6, -5, -4, -1, -1, -2, 
    -1, -1, 1, 3, 3, 5, 6, 5, 4, 3, 2, 2, 1, 2, 2, 2, 
    1, 2, 5, 6, 6, 5, 6, 5, 3, 4, 5, 6, 9, 8, 8, 8, 
    5, 5, 4, 4, 6, 5, 5, 4, 5, 4, 3, 5, 5, 5, 6, 7, 
    8, 7, 8, 10, 
};

static const int8_t sample_K[] ={
    -57, -8, 41, 43, 4, 36, 41, 30, 20, -40, -73, -68, -74, -51, 12, 48, 
    46, 16, 15, 19, -9, -46, -69, -71, -71, -20, 32, 42, 29, -7, -14, 3, 
    4, -3, 0, 4, 13, 30, 35, 29, 37, 48, 52, 53, 59, 58, -31, -76, 
    -68, -68, 7, 55, 59, 12, 6, 37, 31, 40, -23, -74, -65, -72, -57, 17, 
    60, 60, 26, 2, 24, 11, -22, -57, -70, -68, -71, -15, 52, 61, 43, 4, 
    -15, -5, -5, -8, -5, 1, 14, 29, 39, 35, 41, 55, 59, 53, 67, 17, 
};


STATIC mp_obj_t sample_next(mp_obj_t o_in) {
    microbit_sample_iter_t *iter = (microbit_sample_iter_t *)o_in;
    const int8_t *src = iter->data + iter->index;
    int8_t *dest = iter->buffer->data;
    if (iter->index + SOUND_CHUNK_SIZE > iter->len) {
        unsigned len = iter->len-iter->index;
        if (len == 0) {
            return MP_OBJ_STOP_ITERATION;
        }
        unsigned int i;
        for (i = 0; i < len; i++) {
            dest[i] = src[i];
        }
        for (; i < SOUND_CHUNK_SIZE; i++) {
            dest[i] = 0;
        }
        iter->index += len;
    } else {
        for (unsigned int i = 0; i < SOUND_CHUNK_SIZE; i++) {
            dest[i] = src[i];
        }
        iter->index += SOUND_CHUNK_SIZE;
    }
    return iter->buffer;
}

STATIC mp_obj_t sample_get_buffer(mp_obj_t self_in) {
    microbit_sample_iter_t *self = (microbit_sample_iter_t *)self_in;
    return self->buffer;
}
MP_DEFINE_CONST_FUN_OBJ_1(sample_get_buffer_obj, sample_get_buffer);

STATIC const mp_map_elem_t local_dict_table[] = {
    { MP_OBJ_NEW_QSTR(MP_QSTR_get_buffer), (mp_obj_t)&sample_get_buffer_obj },
};

STATIC MP_DEFINE_CONST_DICT(local_dict, local_dict_table);

const mp_obj_type_t microbit_sample_iter_type = {
    { &mp_type_type },
    .name = MP_QSTR_iterator,
    .print = NULL,
    .make_new = NULL,
    .call = NULL,
    .unary_op = NULL,
    .binary_op = NULL,
    .attr = NULL,
    .subscr = NULL,
    .getiter = mp_identity,
    .iternext = sample_next,
    .buffer_p = {NULL},
    .stream_p = NULL,
    .bases_tuple = NULL,
    .locals_dict = (mp_obj_dict_t*)&local_dict,
};

STATIC mp_obj_t sample_iter(mp_obj_t o_in) {
    microbit_sample_t *obj = (microbit_sample_t *)o_in;
    microbit_sample_iter_t *iter = m_new_obj(microbit_sample_iter_t);
    iter->base.type = &microbit_sample_iter_type;
    iter->data = obj->data;
    iter->len = obj->len;
    iter->index = 0;
    iter->buffer = new_microbit_sound_bytes();
    return iter;
}


const mp_obj_type_t microbit_sample_type = {
    { &mp_type_type },
    .name = MP_QSTR_Sample,
    .print = NULL,
    .make_new = NULL,
    .call = NULL,
    .unary_op = NULL,
    .binary_op = NULL,
    .attr = NULL,
    .subscr = NULL,
    .getiter = sample_iter,
    .iternext = NULL,
    .buffer_p = {NULL},
    .stream_p = NULL,
    .bases_tuple = NULL,
    .locals_dict = NULL,
};


STATIC const _microbit_sample_t microbit_sample_T_sample_obj = {
    .base = { &microbit_sample_type },
    .data = sample_T,
    .len = sizeof(sample_T)
};

STATIC const _microbit_sample_t microbit_sample_M_sample_obj = {
    .base = { &microbit_sample_type },
    .data = sample_M,
    .len = sizeof(sample_M)
};

STATIC const _microbit_sample_t microbit_sample_R_sample_obj = {
    .base = { &microbit_sample_type },
    .data = sample_R,
    .len = sizeof(sample_R)
};

STATIC const _microbit_sample_t microbit_sample_B_sample_obj = {
    .base = { &microbit_sample_type },
    .data = sample_B,
    .len = sizeof(sample_B)
};

STATIC const _microbit_sample_t microbit_sample_Ay_sample_obj = {
    .base = { &microbit_sample_type },
    .data = sample_Ay,
    .len = sizeof(sample_Ay)
};

STATIC const _microbit_sample_t microbit_sample_I_sample_obj = {
    .base = { &microbit_sample_type },
    .data = sample_I,
    .len = sizeof(sample_I)
};

STATIC const _microbit_sample_t microbit_sample_Oh_sample_obj = {
    .base = { &microbit_sample_type },
    .data = sample_Oh,
    .len = sizeof(sample_Oh)
};

STATIC const _microbit_sample_t microbit_sample_K_sample_obj = {
    .base = { &microbit_sample_type },
    .data = sample_K,
    .len = sizeof(sample_K)
};

STATIC const mp_map_elem_t globals_table[] = {
    { MP_OBJ_NEW_QSTR(MP_QSTR___name__), MP_OBJ_NEW_QSTR(MP_QSTR_samples) },
    { MP_OBJ_NEW_QSTR(MP_QSTR_T), (mp_obj_t)&microbit_sample_T_sample_obj },
    { MP_OBJ_NEW_QSTR(MP_QSTR_M), (mp_obj_t)&microbit_sample_M_sample_obj },
    { MP_OBJ_NEW_QSTR(MP_QSTR_R), (mp_obj_t)&microbit_sample_R_sample_obj },
    { MP_OBJ_NEW_QSTR(MP_QSTR_B), (mp_obj_t)&microbit_sample_B_sample_obj },
    { MP_OBJ_NEW_QSTR(MP_QSTR_Ay), (mp_obj_t)&microbit_sample_Ay_sample_obj },
    { MP_OBJ_NEW_QSTR(MP_QSTR_I), (mp_obj_t)&microbit_sample_I_sample_obj },
    { MP_OBJ_NEW_QSTR(MP_QSTR_Oh), (mp_obj_t)&microbit_sample_Oh_sample_obj },
    { MP_OBJ_NEW_QSTR(MP_QSTR_K), (mp_obj_t)&microbit_sample_K_sample_obj },
};


STATIC MP_DEFINE_CONST_DICT(sample_module_globals, globals_table);

const mp_obj_module_t samples_module = {
    .base = { &mp_type_module },
    .name = MP_QSTR_samples,
    .globals = (mp_obj_dict_t*)&sample_module_globals,
};


}

